{"version":3,"sources":["Config.js","InfoModal.jsx","generatePackage.js","App.js","serviceWorker.js","index.js"],"names":["App","_this","this","options","name","value","props","title","type","callback","e","onConfigChange","target","noBreak","primaryColor","primaryColorText","secondaryColor","secondaryColorText","backgroundColor","generalTextColor","moodleXmlPath","readFile","files","res","friendlyName","finish_screen","feedback","randomQuestions","n","min","parseInt","threshold","successMessage","failMessage","react_default","a","createElement","className","map","opt","htmlFor","humanize","undefined","checked","onChange","scormVersion","file","isImage","reader","FileReader","onload","event","result","onerror","error","readAsDataURL","str","replace","toUpperCase","Component","InfoModal","show","onClick","hide","style","clear","href","rel","generatePackage","state","JSZipUtils","getBinaryContent","err","data","JSZip","loadAsync","then","zip","input","indexContent","parsedState","JSON","stringify","Object","objectSpread","content","concat","generateIndex","decodeURIComponent","window","atob","slice","split","c","charCodeAt","toString","join","generateAsync","blob","FileSaver","saveAs","toLowerCase","Math","round","Date","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","logo","showInfoModal","_this2","setState","Config_App","assign","prop","defineProperty","preview","bind","download","id","InfoModal_InfoModal","_this3","fetch","text","response","onloadend","dev","el","document","getElementById","contentWindow","open","write","close","Boolean","location","hostname","match","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f5e4113a.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nexport default class App extends Component {\r\n\r\n\trender(){\r\n\t\tconst options = [\r\n\t\t\t{ name: \"title\", value: this.props.title, type: \"text\", callback: (e) => {this.props.onConfigChange(\"title\", e.target.value)}},\r\n\t\t\t{ name: \"primaryColor\", noBreak: true, value: this.props.primaryColor, type: \"color\", callback: (e) => {this.props.onConfigChange(\"primaryColor\", e.target.value)}},\r\n\t\t\t{ name: \"primaryColorText\", value: this.props.primaryColorText, type: \"color\", callback: (e) => {this.props.onConfigChange(\"primaryColorText\", e.target.value)}},\r\n\t\t\t{ name: \"secondaryColor\", noBreak: true,value: this.props.secondaryColor, type: \"color\", callback: (e) => {this.props.onConfigChange(\"secondaryColor\", e.target.value)}},\r\n\t\t\t{ name: \"secondaryColorText\", value: this.props.secondaryColorText, type: \"color\", callback: (e) => {this.props.onConfigChange(\"secondaryColorText\", e.target.value)}},\r\n\t\t\t{ name: \"backgroundColor\", noBreak: true, value: this.props.backgroundColor, type: \"color\", callback: (e) => {this.props.onConfigChange(\"backgroundColor\", e.target.value)}},\r\n\t\t\t{ name: \"generalTextColor\", value: this.props.generalTextColor, type: \"color\", callback: (e) => {this.props.onConfigChange(\"generalTextColor\", e.target.value)}},\r\n\t\t\t{ name: \"logo\", value: this.props.moodleXmlPath, type: \"file\", callback: (e) => {this.readFile(e.target.files[0], res => this.props.onConfigChange(\"logo\", res),true)}},\r\n\t\t\t{ name: \"moodleXml\", friendlyName: \"Moodle XML\", value: this.props.moodleXmlPath, type: \"file\", callback: (e) => {this.readFile(e.target.files[0], res => this.props.onConfigChange(\"moodleXmlPath\", res))}},\r\n\t\t\t{ name: \"finish_screen\",  noBreak: true, friendlyName: \"Finish screen\", value: this.props.finish_screen, type: \"checkbox\", callback: (e) => {this.props.onConfigChange(\"finish_screen\", !this.props.finish_screen)}},\r\n\t\t\t{ name: \"feedback\",  noBreak: true, value: this.props.feedback, type: \"checkbox\", callback: (e) => {this.props.onConfigChange(\"feedback\", !this.props.feedback,)}},\r\n\t\t\t{ name: \"randomQuestions\", value: this.props.randomQuestions, type: \"checkbox\", callback: (e) => {this.props.onConfigChange(\"randomQuestions\", !this.props.randomQuestions)}},\r\n\t\t\t{ name: \"n\", noBreak: true, friendlyName: \"Number of questions\", value: this.props.n, min: 0, type: \"number\", callback: (e) => {this.props.onConfigChange(\"n\", parseInt(e.target.value))}},\r\n\t\t\t{ name: \"threshold\", value: this.props.threshold, type: \"number\", callback: (e) => {this.props.onConfigChange(\"threshold\", e.target.value)}},\r\n\t\t\t{ name: \"successMessage\", value: this.props.successMessage, type: \"text\", callback: (e) => {this.props.onConfigChange(\"successMessage\", e.target.value)}},\r\n\t\t\t{ name: \"failMessage\", value: this.props.failMessage, type: \"text\", callback: (e) => {this.props.onConfigChange(\"failMessage\", e.target.value)}},\r\n\t\t];\r\n\t\treturn <div className=\"config\">\r\n\t\t\t{options.map(opt=>{\r\n\t\t\t\treturn [<div className=\"form-group\" >\r\n\t\t\t\t<label htmlFor={opt.name}><b>{opt.friendlyName || this.humanize(opt.name)}</b></label>\r\n\t\t\t\t<input name={opt.name} type={opt.type} value={opt.type === \"file\"? undefined: opt.value} min={opt.min} checked={opt.value} onChange={opt.callback}/>\r\n\t\t\t</div>, opt.noBreak ? null: <br/>]\r\n\t\t\t})}\r\n\t\t\t<div className=\"form-group\">\r\n\t\t\t\t<label htmlFor=\"scormVersion\"><b>SCORM Version</b></label>\r\n\t\t\t\t<label htmlFor=\"scormVersion\">{\"SCORM 1.2\"}</label>\r\n\t\t\t\t<input name=\"scormVersion\" type=\"radio\" value={\"1.2\"} checked={this.props.scormVersion === \"1.2\"} onChange={(e) => {this.props.onConfigChange(\"scormVersion\", \"1.2\")}}/>\r\n\t\t\t\t<label htmlFor=\"scormVersion\">{\"SCORM 2004\"}</label>\r\n\t\t\t\t<input name=\"scormVersion\" type=\"radio\" value={\"1.2\"} checked={this.props.scormVersion === \"2004\"} onChange={(e) => {this.props.onConfigChange(\"scormVersion\", \"2004\")}}/>\r\n\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t}\r\n\r\n\treadFile(file, callback, isImage) {\r\n\t\ttry {\r\n\t\t\tconst reader = new FileReader()\r\n\t\t\treader.onload = event => callback(event.target.result);\r\n\t\t\treader.onerror = error => callback(\"\");\r\n\t\t\treader.readAsDataURL(file);\t\r\n\t\t} catch (e) {\r\n\t\t\tcallback(\"\");\r\n\t\t}\r\n\r\n\t}\r\n\r\n\thumanize(str) {\r\n\t\treturn str \r\n\t\t    .replace(/([A-Z])/g, ' $1')\r\n\t\t    .replace(/^./, function(str){ return str.toUpperCase(); })\r\n\t}\r\n}","import React, { Component } from 'react';\r\n\r\nexport default class InfoModal extends Component {\r\n\r\n\trender(){\r\n\t\treturn <div className={this.props.show ? \"modal\" : \"modal hidden\"}>\r\n\t\t\t<div className=\"overlay\"/>\r\n\t\t\t<div className=\"modal-body\">\r\n\t\t\t\t<button className=\"modal-close\" onClick={this.props.hide}>\r\n\t\t\t\t  <i className=\"material-icons\">close</i>\r\n\t\t\t\t</button>\r\n\t\t\t\t<h3>About</h3>\r\n\t\t\t\t<br style={{clear: 'both'}}/>\r\n\t\t\t\t<div className=\"modal-content\">\r\n\t\t\t\tThis website allows you to customize your very own quiz application and generate a SCORM package so you can upload it to your preferred LMS.\r\n\t\t\t\t<h4>Exercises</h4>\r\n\t\t\t\t<hr/>\r\n\t\t\t\tIn order to use your own exercises on the quiz, you need to submit a Moodle XML file.\r\n\t\t\t\tIf you do not have one you can convert from an <a href=\"https://docs.moodle.org/all/es/Formato_Aiken\" rel=\"noopener noreferrer\" target=\"_blank\">Aiken</a> file using this <a rel=\"noopener noreferrer\" target=\"_blank\" href=\"http://sonsoleslp.github.io/quiz-converter/\" >Quiz converter</a>.\r\n\t\t\t\t<h4>Publish</h4>\r\n\t\t\t\t<hr/>\r\n\t\t\t\tYou don't have an LMS? Don't worry! You can upload your SCORM Package to <a href=\"http://vishub.org\" rel=\"noopener noreferrer\" target=\"_blank\">ViSH</a>, and everyone will be able to get access with no need to sign up.\r\n\t\t\t\t<h4>Author</h4>\r\n\t\t\t\t<hr/>\r\n\t\t\t\tThis project was developed by <a href=\"http://github.com/sonsoleslp\" rel=\"noopener noreferrer\" target=\"_blank\">@sonsoleslp</a> using <a rel=\"noopener noreferrer\" target=\"_blank\" href=\"https://github.com/agordillo/RESCORM\">RESCORM</a>.\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t}\r\n\r\n}\r\n","import JSZip from 'jszip';\r\nimport JSZipUtils from 'jszip-utils';\r\nimport FileSaver from 'file-saver';\r\n\r\nexport const generatePackage  = (state) => {\r\n    JSZipUtils.getBinaryContent(state.scormVersion === \"2004\" ? \"scorm2004.zip\":\"scorm12.zip\", function(err, data) {\r\n        if (err) {\r\n            throw err; // or handle err\r\n        }\r\n        JSZip.loadAsync(data).then(function(zip) {\r\n        \tlet indexContent = generateIndex(state)\r\n\t\t\tzip.file('index.html', indexContent);\r\n            if (state.moodleXmlPath) {\r\n                zip.file(\"assets/quiz.xml\", decode(state.moodleXmlPath));\r\n            } \r\n\t\t\tzip.generateAsync({ type: \"blob\" }).then(function(blob) {\r\n                FileSaver.saveAs(blob, state.title.toLowerCase().replace(/\\s/g, '') + Math.round(+new Date() / 1000) + (state.scormVersion === \"2004\" ? \"_2004\" : \"_1.2\") + \".zip\");\r\n            });\r\n        }) \r\n    });\r\n \r\n\r\n}\r\nfunction decode(input) {\r\n    return decodeURIComponent(window.atob(input.slice(21)).split('').map(function(c) {\r\n        return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\r\n    }).join(''))\r\n}\r\n\r\nfunction generateIndex(state) {\r\n    let parsedState = JSON.stringify({...state, content: undefined, moodleXmlPath: state.moodleXmlPath ? \"assets/quiz.xml\" : undefined});\r\n    return `<!DOCTYPE html>\r\n<html lang=\"en\">\r\n<head>\r\n    <meta charset=\"UTF-8\">\r\n    <title>${state.title || \"Quiz\"}</title>\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n        <link href=\"https://fonts.googleapis.com/icon?family=Material+Icons\"\r\n      rel=\"stylesheet\">\r\n    <link href=\"https://fonts.googleapis.com/css?family=Source+Sans+Pro\" rel=\"stylesheet\">\r\n </head>\r\n<body>\r\n<div id=\"root\"></div>\r\n<script> window.config=JSON.parse('${parsedState}');</script>\r\n<script type=\"text/javascript\" src=\"bundle.js\"></script>\r\n</body>\r\n</html>`;\r\n}","import React, { Component } from 'react';\nimport Config from './Config';\nimport InfoModal from './InfoModal';\nimport './App.css';\nimport {generatePackage} from './generatePackage';\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      title: \"Quiz\",\n      primaryColor: \"#20BEB8\",\n      primaryColorText: \"#ffffff\",\n      secondaryColor: \"#333333\",\n      secondaryColorText: \"#ffffff\",\n      backgroundColor: \"#ffffff\",\n      generalTextColor: \"#000000\",\n      logo: undefined,\n      moodleXmlPath: undefined,\n      finish_screen: true,\n      feedback: true,\n      randomQuestions: true,\n      n: 5,\n      scormVersion: \"1.2\",\n      showInfoModal: false,\n      threshold: 50,\n      successMessage: \"Congratulations! You have passed\",\n      failMessage: \"Keep trying...\"\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header>\n          <button className=\"info\" onClick={()=>{this.setState({showInfoModal: true})}}>\n            <i className=\"material-icons\">info</i>\n          </button>\n          <h1><i className=\"material-icons\">school</i> \n          <a target=\"_blank\"  rel=\"noopener noreferrer\" href=\"https://github.com/agordillo/RESCORM\">RESCORM</a> Quiz generator\n          </h1>\n          </header>\n        <div className=\"content\"> \n          <div className=\"content-col left\">\n            <h2>Configuration</h2>\n            <Config {...this.state} onConfigChange={(prop,value)=>{this.setState({[prop]:value})}}/>\n            <div className=\"buttons\">\n              <button onClick={this.preview.bind(this)}>\n                <i className=\"material-icons\">remove_red_eye</i>Preview\n              </button>\n              <button onClick={this.download.bind(this)}>\n                <i className=\"material-icons\">cloud_download</i>Dowload\n              </button>\n            </div>\n          </div>\n          <div className=\"content-col right\">\n            {/*<h2>Preview</h2>*/}\n            <iframe   id=\"visor\"  title=\"app\"     />\n          </div>\n        </div>\n        <InfoModal show={this.state.showInfoModal} hide={()=>{this.setState({showInfoModal: false})}}/>\n      </div>    \n    );\n  }\n  preview(){\n    fetch(\"scorm12/index.html\").then(res=>res.text()).then(response=>{\n        this.onloadend(response);\n    })\n\n  }\n\n  onloadend(res) {\n    let content = res.replace('<div id=\"root\"></div>',`\n      <div id='root'></div>\n      <script>\n        window._babelPolyfill = false; \n        window.config=JSON.parse('${JSON.stringify({...this.state, dev: true})}');\n      </script>`)\n    content = content.replace(\"bundle.js\",\"scorm12/bundle.js\")\n    let el = document.getElementById('visor')\n    el.contentWindow.document.open();\n    el.contentWindow.document.write(content);\n    el.contentWindow.document.close();\n  }\n  download() {\n    generatePackage(this.state);\n  }\n  componentDidMount(){\n    this.preview();\n  }\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}