---
title: "About"
---


## Research Interests

 
```{r,echo=F}
Research_interests = rio::import("cv.xlsx", sheet = "Research_interests")
Research_interests_tags = htmltools::tagList()
for (i in 1:nrow(Research_interests)) {
  inte = Research_interests[i,]
  if (!is.na(inte)){
     Research_interests_tags[[i]] <- htmltools::HTML(paste0("<span style='margin-right: 2px; margin-bottom: 2px;' class='badge rounded-pill bg-danger'>",inte,"</span>"))
  }
}
Research_interests_tags
```


## Education



```{r,echo=F}
education = rio::import("cv.xlsx", sheet = "Education")
eductags = htmltools::tagList()

for (i in 1:nrow(education)) {
  edu = education[i,]
  eductags[[i]] <- htmltools::tags$li(
    htmltools::tagList(
      htmltools::tags$span(paste0("(",edu$Year,") ")),
      htmltools::tags$strong(edu$Program), 
      htmltools::tags$span(paste0(" - ", edu$Institution)),
      htmltools::tags$span(paste0(ifelse(!is.na(edu$Extra),paste0("", edu$Extra),"")))
    )
  )
}
htmltools::tags$ul(
eductags
)
```



 
## Work Experience


```{r,echo=F}
experience = rio::import("cv.xlsx", sheet = "Experience")
exptags = htmltools::tagList()

for (i in 1:nrow(experience)) {
  exp = experience[i,]
  exptags[[i]] <- htmltools::tags$li(
    htmltools::tagList(
      htmltools::tags$span(paste0("(",exp$Year,") ")),
      htmltools::tags$strong(exp$Position), 
      htmltools::tags$span(paste0(" - ", exp$Institution)) 
    )
  )
}
htmltools::tags$ul(
exptags
)
```


## Awards

```{r,echo=F}
awards <- rio::import("cv.xlsx", sheet = "Awards")
awardstags <- htmltools::tagList()

# Define the category you want first
first_category <- c("Career", "Best paper", "Teaching", "Thesis", "Reviewing", "Teaching-related", "Software")

remaining_categories <- setdiff(unique(awards$Category), first_category)
ordered_levels <- c(first_category, sort(remaining_categories))
awards$Category <- factor(awards$Category, levels = ordered_levels)

# Split and prepare tag list
awardstags <- htmltools::tagList()
award_groups <- split(awards, awards$Category)

for (catname in names(award_groups)) {
  group <- award_groups[[catname]]
  
  # Skip if group has no rows
  if (nrow(group) == 0) next
  
  sublist <- htmltools::tagList()
  for (i in seq_len(nrow(group))) {
    awa <- group[i, ]
    sublist[[i]] <- htmltools::tags$li(
      htmltools::tags$span(paste0("(", awa$Year, ") "), htmltools::HTML(awa$Description))
    )
  }
  
  awardstags[[length(awardstags) + 1]] <- htmltools::tags$li(
    htmltools::tagList(
      htmltools::tags$strong(catname),
      htmltools::tags$ul(sublist)
    )
  )
}

htmltools::tags$ul(awardstags)

```

## Teaching

```{r,echo=F}
# Load the teaching data
teaching <- rio::import("cv.xlsx", sheet = "Teaching")

# Convert Level to a factor to preserve the order in the data (optional)

# Prepare the HTML tag list
teatags <- htmltools::tagList()

# Split the teaching data by Level
teaching_groups <- split(teaching, teaching$Level)

# Loop through each Level group
for (levelname in names(teaching_groups)) {
  group <- teaching_groups[[levelname]]
  
  # Skip if group has no rows
  if (nrow(group) == 0) next
  
  # Inner list for each course under this Level
  sublist <- htmltools::tagList()
  for (i in seq_len(nrow(group))) {
    tea <- group[i, ]
    sublist[[i]] <- htmltools::tags$li(
      htmltools::tagList(
        htmltools::tags$span(paste0("(", tea$Year, ") ")),
        htmltools::tags$strong(tea$Course),
        htmltools::tags$span(paste0(" - ", tea$Institution))
      )
    )
  }
  
  # Outer list item: Level + nested UL
  teatags[[length(teatags) + 1]] <- htmltools::tags$li(
    htmltools::tagList(
      htmltools::tags$strong(levelname),
      htmltools::tags$ul(sublist)
    )
  )
}

# Return the full list
htmltools::tags$ul(teatags)

```

## Supervision


```{r,echo=F}
supervision = rio::import("cv.xlsx", sheet = "Supervision")
supervisiontags = htmltools::tagList()

for (i in 1:nrow(supervision)) {
  superv = supervision[i,]
  supervisiontags[[i]] <- htmltools::tags$li(
    htmltools::tagList(
      htmltools::HTML(superv), 
    )
  )
}
htmltools::tags$ul(
supervisiontags
)
```


## Research Visits
```{r,echo=F}
visits = rio::import("cv.xlsx", sheet = "Research_visits")
visitstags = htmltools::tagList()

for (i in 1:nrow(visits)) {
  visit = visits[i,]
  visitstags[[i]] <- htmltools::tags$li(htmltools::tagList(
   htmltools::tags$span( paste0("(",visit$Year,") ")),
   htmltools::tags$strong(  visit$Institution), 
   htmltools::tags$span( paste0(" - ", visit$Country, " (",visit$Duration,")"))
  ))
}
htmltools::tags$ul(
visitstags
)
```

## Research Projects

```{r,echo=F}
projects = rio::import("cv.xlsx", sheet = "Projects")
projtags = htmltools::tagList()

for (i in 1:nrow(projects)) {
  proj = projects[i,]
  # Unique ID for each dropdown
  description_id <- paste0("description-", i)
  
  projtags[[i]] <- htmltools::tags$li(
    htmltools::tagList(
      htmltools::tags$span(paste0("(", proj$Year, ") ")),
       htmltools::tagList(
          htmltools::tags$b(proj$Name),
          htmltools::tags$span(paste0(ifelse(!is.na(proj$Role), 
                               paste0("(role: ",proj$Role,")"), "")," - Funded by: ", proj$Funding))),
       
      
      # Toggle button for the dropdown
      htmltools::tags$button(
        htmltools::HTML("<i class='bi bi-plus-lg'></i></button>"),
        class = "btn btn-sm btn-danger btn-pub",
        style = "left: -30px;",
        `data-bs-toggle` = "collapse",
        `data-bs-target` = paste0("#", description_id),
        `aria-expanded` = "false",
        `aria-controls` = description_id
      ),
      
      # Description section in a collapsible div
      htmltools::tags$div(
        class = "collapse",
        id = description_id,
        htmltools::tagList(
          htmltools::tags$small(
            paste0(ifelse(!is.na(proj$Description), proj$Description, "")#,
            # ifelse(!is.na(proj$Money), paste0("\nFunding: ", proj$Money, ""),"")
            ),
          ),
          htmltools::tags$div(
            htmltools::tags$a(htmltools::tags$button(htmltools::HTML("<i class='bi bi-link-45deg'></i> Website"),class="btn btn-sm btn-outline-danger"), 
                              href = proj$Link, target = "_blank"), style="margin-top:10px;")
        )
      )
      
      
    ), style = "position:relative;margin-bottom:10px;"
  )
}

htmltools::tags$ul(projtags)

```


## Editorial work and other community service
```{r,echo=F}
# Load the editorial work data
editorial <- rio::import("cv.xlsx", sheet = "Editorial_work")


# Define the category you want first
first_category <- c("Journals","Conferences","Books", "Scientific societies", "Grants", "Other")

remaining_categories <- setdiff(unique(editorial$Where), first_category)
ordered_levels <- c(first_category, sort(remaining_categories))
editorial$Where <- factor(editorial$Where, levels = ordered_levels)

# Prepare the HTML tag list
editorialtags <- htmltools::tagList()

# Split by 'Where'
editorial_groups <- split(editorial, editorial$Where)

# Loop through each group
for (wherename in names(editorial_groups)) {
  group <- editorial_groups[[wherename]]
  
  if (nrow(group) == 0) next
  
  sublist <- htmltools::tagList()
  for (i in seq_len(nrow(group))) {
    edi <- group[i, ]
    sublist[[i]] <- htmltools::tags$li(
      htmltools::tagList(
        htmltools::tags$span(paste0("(", edi$Year, ") ")),
        htmltools::HTML(paste0("<span>", edi$Description, "</span>"))
      )
    )
  }
  
  editorialtags[[length(editorialtags) + 1]] <- htmltools::tags$li(
    htmltools::tagList(
      htmltools::tags$strong(wherename),
      htmltools::tags$ul(sublist)
    )
  )
}

# Wrap in a top-level <ul>
htmltools::tags$ul(editorialtags)

```



## Diversity, Equity, and Inclusion Activities

```{r,echo=F}
editorial = rio::import("cv.xlsx", sheet = "DEI")
editorialtags = htmltools::tagList()

for (i in 1:nrow(editorial)) {
  edi = editorial[i,]
  editorialtags[[i]] <- htmltools::tags$li(htmltools::tagList(
   htmltools::tags$span( paste0("(",edi$Year,") ")),
   htmltools::HTML(paste0("<span>",edi$Description,"</span>"))
  ))
}
htmltools::tags$ul(
editorialtags
)
```

## Other merits

```{r,echo=F}
other = rio::import("cv.xlsx", sheet = "Other_merits")
othertags = htmltools::tagList()

for (i in 1:nrow(other)) {
  oth = other[i,]
  othertags[[i]] <- htmltools::tags$li(
    paste0("(",oth$Year,") ",oth$Description)
  )
}
htmltools::tags$ul(
othertags
)
```
 

 
 

