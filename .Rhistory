<p class=' small'><br/>" ,
abstract ,
"</p><p>",kws,"</p><br/>"," </div>", sep = "")
}
entry <- paste("<li style='position:relative;margin-bottom:0.8rem;list-style:none;'>", entry, "</li>", sep = "")
entry
}
(Publications) %>% ungroup %>% dplyr::mutate(seq = seq_along(Title)) -> Publications
Publications %>%  rowwise %>%
dplyr::mutate(Ref = generateAPARef(Publications[seq,])) -> Publications
pub_types = (unique(Publications$`Document Type`))
pub_tags <- htmltools::tagList()
for (p in 1:length(pub_types)) {
year_tags = htmltools::tagList()
ds <- Publications %>% filter(`Document Type` == pub_types[p])
years <- unique(ds$Year)
for (y in 1:length(years)){
research_tags = htmltools::tagList()
dy <- ds %>% filter(Year == years[y])
for (i in 1:nrow(dy)) {
if (!is.na(dy[i,]$Ref)){
research_tags[[i]] <- htmltools::HTML(dy[i,]$Ref)
}
}
year_tags[[y]] <- htmltools::tagList(
htmltools::tags$h3(paste0(years[y])),
htmltools::tags$ul(
research_tags,
style="padding-left: 3rem"
)
)
}
pub_tags[[p]] <- htmltools::tagList(
htmltools::tags$h2(paste0(pub_types[p],"s")),
year_tags
)
}
(pub_tags)
Publications %>% dplyr::mutate(field = ifelse(is.na(JCR),`Document type`,JCR))
Publications %>% dplyr::mutate(field = ifelse(is.na(JCR),`Document type`,JCR))
Publications %>% dplyr::mutate(field = ifelse(is.na(JCR),`Document Type`,JCR))
Publications %>% dplyr::mutate(field = ifelse(is.na(JCR),`Document Type`,JCR)) %>% janitor::tabyl(field)
Publications %>% dplyr::mutate(field = ifelse(is.na(JCR),`Document Type`,JCR)) %>% janitor::tabyl(field) %>% data.frame
outcomes <- Publications %>%  janitor::tabyl(`Document Type`) %>%
outcomes_with_types <- Publications %>% dplyr::mutate(field = ifelse(is.na(JCR),`Document Type`,JCR)) %>% janitor::tabyl(field) %>%   data.frame
outcomes <- Publications %>%  janitor::tabyl(`Document Type`) %>%
outcomes_with_types <- Publications %>% dplyr::mutate(field = ifelse(is.na(JCR),`Document Type`,JCR)) %>% janitor::tabyl(field) %>%   data.frame
outcomes <- Publications %>%  janitor::tabyl(`Document Type`)
outcomes_with_types <- Publications %>% dplyr::mutate(field = ifelse(is.na(JCR),`Document Type`,JCR)) %>% janitor::tabyl(field) %>%   data.frame
output = ""
if (outcomes$field)
outcomes_with_types
outcomes
outcomes_with_types <- Publications %>% dplyr::mutate(field = ifelse(is.na(JCR),`Document Type`,JCR)) %>% janitor::tabyl(field) %>%   list
outcomes_with_types
outcomes_with_types <- Publications %>% dplyr::mutate(field = ifelse(is.na(JCR),`Document Type`,JCR)) %>% janitor::tabyl(field) %>% data.frame %>% select(field,n)
outcomes_with_types <- Publications %>% dplyr::mutate(field = ifelse(is.na(JCR),`Document Type`,JCR)) %>% janitor::tabyl(field) %>% data.frame %>% select(field,n) %>% list
outcomes_with_types
Publications %>% dplyr::mutate(field = ifelse(is.na(JCR),`Document Type`,JCR)) %>% janitor::tabyl(field) %>% data.frame %>% select(field,n)
outcomes_with_types <- Publications %>% dplyr::mutate(field = ifelse(is.na(JCR),`Document Type`,JCR)) %>% janitor::tabyl(field) %>% data.frame %>% pull((field,n)
outcomes_with_types <- Publications %>% dplyr::mutate(field = ifelse(is.na(JCR),`Document Type`,JCR)) %>% janitor::tabyl(field) %>% data.frame %>% pull((field,n)
outcomes_with_types <- Publications %>% dplyr::mutate(field = ifelse(is.na(JCR),`Document Type`,JCR)) %>% janitor::tabyl(field) %>% data.frame %>% pull(field,n)
outcomes_with_types
outcomes_with_types <- Publications %>% dplyr::mutate(field = ifelse(is.na(JCR),`Document Type`,JCR)) %>% janitor::tabyl(field) %>% data.frame %>% pull(n,field)
outcomes_with_types
outcomes <- Publications %>%  janitor::tabyl(`Document Type`) %>% data.frame %>% pull(n,field)
outcomes <- Publications %>%  janitor::tabyl(`Document Type`) %>% data.frame %>% pull(n,`Document Type`)
Publications %>%  janitor::tabyl(`Document Type`) %>% data.frame
outcomes <- Publications %>%  janitor::tabyl(`Document Type`) %>% data.frame %>% pull(n,`Document.Type`)
outcomes_with_types <- Publications %>% dplyr::mutate(field = ifelse(is.na(JCR),`Document Type`,JCR)) %>% janitor::tabyl(field) %>% data.frame %>% pull(n,field)
output = "My research contains "
if ("Journal Article" %in% outcomes$field) {
output = paste0(output, fulter() )
}
outcomes <- Publications %>%  janitor::tabyl(`Document Type`) %>% data.frame %>% pull(n,`Document.Type`)
outcomes_with_types <- Publications %>% dplyr::mutate(field = ifelse(is.na(JCR),`Document Type`,JCR)) %>% janitor::tabyl(field) %>% data.frame %>% pull(n,field)
output = "My research contains "
outcomes
names(outcomes)
length(outcomes)
outcomes
types_pub = rev(names(outcomes))
types_pub
types_pub = rev(stringr::str_to_lower(names(outcomes)))
types_pub
outcomes <- Publications %>%  janitor::tabyl(`Document Type`) %>% data.frame %>% pull(n,`Document.Type`)
outcomes_with_types <- Publications %>% dplyr::mutate(field = ifelse(is.na(JCR),`Document Type`,JCR)) %>% janitor::tabyl(field) %>% data.frame %>% pull(n,field)
output = "My research includes "
types_pub = rev(stringr::str_to_lower(names(outcomes)))
for (i in types_pub) {
numberr <- outcomes[[i]]
output = paste0(output, numberr, i)
}
outcomes <- Publications %>%  janitor::tabyl(`Document Type`) %>% data.frame %>% pull(n,`Document.Type`)
outcomes_with_types <- Publications %>% dplyr::mutate(field = ifelse(is.na(JCR),`Document Type`,JCR)) %>% janitor::tabyl(field) %>% data.frame %>% pull(n,field)
output = "My research includes "
types_pub = rev(names(outcomes))
for (i in types_pub) {
numberr <- outcomes[[i]]
output = paste0(stringr::str_to_lower(output), numberr, i)
}
output
outcomes <- Publications %>%  janitor::tabyl(`Document Type`) %>% data.frame %>% pull(n,`Document.Type`)
outcomes_with_types <- Publications %>% dplyr::mutate(field = ifelse(is.na(JCR),`Document Type`,JCR)) %>% janitor::tabyl(field) %>% data.frame %>% pull(n,field)
output = "My research includes "
types_pub = rev(names(outcomes))
for (i in types_pub) {
numberr <- outcomes[[i]]
output = paste0(stringr::str_to_lower(output), numberr, i,", ")
}
output
outcomes <- Publications %>%  janitor::tabyl(`Document Type`) %>% data.frame %>% pull(n,`Document.Type`)
outcomes_with_types <- Publications %>% dplyr::mutate(field = ifelse(is.na(JCR),`Document Type`,JCR)) %>% janitor::tabyl(field) %>% data.frame %>% pull(n,field)
output = "My research includes "
types_pub = rev(names(outcomes))
for (i in types_pub) {
numberr <- outcomes[[i]]
output = paste0(stringr::str_to_lower(output), numberr, " ",  i,", ")
}
output
outcomes <- Publications %>%  janitor::tabyl(`Document Type`) %>% data.frame %>% pull(n,`Document.Type`)
outcomes_with_types <- Publications %>% dplyr::mutate(field = ifelse(is.na(JCR),`Document Type`,JCR)) %>% janitor::tabyl(field) %>% data.frame %>% pull(n,field)
output = "My research includes "
types_pub = rev(names(outcomes))
for (i in types_pub) {
numberr <- outcomes[[i]]
output = paste0(stringr::str_to_lower(output), "s", numberr, " ",  i,", ")
}
output
outcomes <- Publications %>%  janitor::tabyl(`Document Type`) %>% data.frame %>% pull(n,`Document.Type`)
outcomes_with_types <- Publications %>% dplyr::mutate(field = ifelse(is.na(JCR),`Document Type`,JCR)) %>% janitor::tabyl(field) %>% data.frame %>% pull(n,field)
output = "My research includes "
types_pub = rev(names(outcomes))
for (i in types_pub) {
numberr <- outcomes[[i]]
output = paste0(stringr::str_to_lower(output),  numberr, " ",  i, "s", ", ")
}
output
outcomes <- Publications %>%  janitor::tabyl(`Document Type`) %>% data.frame %>% pull(n,`Document.Type`)
outcomes_with_types <- Publications %>% dplyr::mutate(field = ifelse(is.na(JCR),`Document Type`,JCR)) %>% janitor::tabyl(field) %>% data.frame %>% pull(n,field)
output = "My research includes "
types_pub = rev(names(outcomes))
for (i in types_pub) {
numberr <- outcomes[[i]]
output = paste0((output),  numberr, " ",  stringr::str_to_lower(i), "s", ", ")
}
output
outcomes <- Publications %>%  janitor::tabyl(`Document Type`) %>% data.frame %>% pull(n,`Document.Type`)
outcomes_with_types <- Publications %>% dplyr::mutate(field = ifelse(is.na(JCR),`Document Type`,JCR)) %>% janitor::tabyl(field) %>% data.frame %>% pull(n,field)
output = "My research includes "
types_pub = rev(names(outcomes))
for (i in 1:length(types_pub)) {
pubb <- types_pub[i]
numberr <- outcomes[[pubb]]
output = paste0((output),  numberr, " ",  stringr::str_to_lower(pubb), "s", ", ")
}
output
outcomes <- Publications %>%  janitor::tabyl(`Document Type`) %>% data.frame %>% pull(n,`Document.Type`)
outcomes_with_types <- Publications %>% dplyr::mutate(field = ifelse(is.na(JCR),`Document Type`,JCR)) %>% janitor::tabyl(field) %>% data.frame %>% pull(n,field)
output = "My research includes "
types_pub = rev(names(outcomes))
for (i in 1:length(types_pub)) {
pubb <- types_pub[i]
numberr <- outcomes[[pubb]]
output = paste0((output),  numberr, " ",  stringr::str_to_lower(pubb), "s", ifelse(i==length(types_pub),".",", "))
}
output
outcomes <- Publications %>%  janitor::tabyl(`Document Type`) %>% data.frame %>% pull(n,`Document.Type`)
outcomes_with_types <- Publications %>% dplyr::mutate(field = ifelse(is.na(JCR),`Document Type`,JCR)) %>% janitor::tabyl(field) %>% data.frame %>% pull(n,field)
output = "My research includes "
types_pub = rev(names(outcomes))
for (i in 1:length(types_pub)) {
pubb <- types_pub[i]
numberr <- outcomes[[pubb]]
lastt <- ifelse(i==length(types_pub)
output = paste0(ifelse(lastt, "and ",""), (output),  numberr, " ",  stringr::str_to_lower(pubb), "s", lastt,".",", "))
outcomes <- Publications %>%  janitor::tabyl(`Document Type`) %>% data.frame %>% pull(n,`Document.Type`)
outcomes_with_types <- Publications %>% dplyr::mutate(field = ifelse(is.na(JCR),`Document Type`,JCR)) %>% janitor::tabyl(field) %>% data.frame %>% pull(n,field)
output = "My research includes "
types_pub = rev(names(outcomes))
for (i in 1:length(types_pub)) {
pubb <- types_pub[i]
numberr <- outcomes[[pubb]]
lastt <- ifelse(i==length(types_pub))
output = paste0(ifelse(lastt, "and ",""), (output),  numberr, " ",  stringr::str_to_lower(pubb), "s", lastt,".",", "))
outcomes <- Publications %>%  janitor::tabyl(`Document Type`) %>% data.frame %>% pull(n,`Document.Type`)
outcomes_with_types <- Publications %>% dplyr::mutate(field = ifelse(is.na(JCR),`Document Type`,JCR)) %>% janitor::tabyl(field) %>% data.frame %>% pull(n,field)
output = "My research includes "
types_pub = rev(names(outcomes))
for (i in 1:length(types_pub)) {
pubb <- types_pub[i]
numberr <- outcomes[[pubb]]
lastt <- ifelse(i==length(types_pub))
output = paste0(ifelse(lastt, "and ",""), (output),  numberr, " ",  stringr::str_to_lower(pubb), "s", lastt,".",", ")
}
outcomes <- Publications %>%  janitor::tabyl(`Document Type`) %>% data.frame %>% pull(n,`Document.Type`)
outcomes_with_types <- Publications %>% dplyr::mutate(field = ifelse(is.na(JCR),`Document Type`,JCR)) %>% janitor::tabyl(field) %>% data.frame %>% pull(n,field)
output = "My research includes "
types_pub = rev(names(outcomes))
for (i in 1:length(types_pub)) {
pubb <- types_pub[i]
numberr <- outcomes[[pubb]]
lastt <- (i==length(types_pub))
output = paste0(ifelse(lastt, "and ",""), (output),  numberr, " ",  stringr::str_to_lower(pubb), "s",ifelse lastt,".",", "))
lastt <- i==length(types_pub)
outcomes <- Publications %>%  janitor::tabyl(`Document Type`) %>% data.frame %>% pull(n,`Document.Type`)
outcomes_with_types <- Publications %>% dplyr::mutate(field = ifelse(is.na(JCR),`Document Type`,JCR)) %>% janitor::tabyl(field) %>% data.frame %>% pull(n,field)
output = "My research includes "
types_pub = rev(names(outcomes))
for (i in 1:length(types_pub)) {
pubb <- types_pub[i]
numberr <- outcomes[[pubb]]
lastt <- i==length(types_pub)
output = paste0(ifelse(lastt, "and ",""), output,  numberr, " ",  stringr::str_to_lower(pubb), "s",ifelse( lastt,".",", "))
}
output
outcomes <- Publications %>%  janitor::tabyl(`Document Type`) %>% data.frame %>% pull(n,`Document.Type`)
outcomes_with_types <- Publications %>% dplyr::mutate(field = ifelse(is.na(JCR),`Document Type`,JCR)) %>% janitor::tabyl(field) %>% data.frame %>% pull(n,field)
output = "My research includes "
types_pub = rev(names(outcomes))
for (i in 1:length(types_pub)) {
pubb <- types_pub[i]
numberr <- outcomes[[pubb]]
lastt <- i==length(types_pub)
output = paste0(ifelse(lastt, "and ",""), output,  numberr, " ",  stringr::str_to_lower(pubb), "s",ifelse( lastt,".",", "))
}
output
outcomes <- Publications %>%  janitor::tabyl(`Document Type`) %>% data.frame %>% pull(n,`Document.Type`)
outcomes_with_types <- Publications %>% dplyr::mutate(field = ifelse(is.na(JCR),`Document Type`,JCR)) %>% janitor::tabyl(field) %>% data.frame %>% pull(n,field)
output = "My research includes "
types_pub = rev(names(outcomes))
for (i in 1:length(types_pub)) {
pubb <- types_pub[i]
numberr <- outcomes[[pubb]]
lastt <- i==length(types_pub)
output = paste0( output, ifelse(lastt, "and ",""), numberr, " ",  stringr::str_to_lower(pubb), "s",ifelse( lastt,".",", "))
}
output
outcomes
only_types <- Publications %>% janitor::tabyl(JCR) %>% data.frame
only_types
only_types
only_types <- Publications %>% janitor::tabyl(JCR) %>% data.frame %>% filter(!is.na(JCR)) %>% arrange(JCR) %>% pull(n,JCR)
only_types
outcomes <- Publications %>%  janitor::tabyl(`Document Type`) %>% data.frame %>% pull(n,`Document.Type`)
outcomes_with_types <- Publications %>% dplyr::mutate(field = ifelse(is.na(JCR),`Document Type`,JCR)) %>% janitor::tabyl(field) %>% data.frame %>% pull(n,field)
only_types <- Publications %>% janitor::tabyl(JCR) %>% data.frame %>% filter(!is.na(JCR)) %>% arrange(JCR) %>% pull(n,JCR)
output = "My research publications include "
types_pub = rev(names(outcomes))
for (i in 1:length(types_pub)) {
pubb <- types_pub[i]
numberr <- outcomes[[pubb]]
lastt <- i==length(types_pub)
jcrs <- ""
if (pubb == "Journal Article") {
if (outcomes_with_types[["Journal Article"]] != outcomes[["Journal Article"]] ){
jcrs <- paste0(jcrs,"(")
for (j in 1:length(names(only_types))){
qq <- only_types[j]
jcrs <- paste0(jcrs, outcomes_with_types[[qq]], "JCR ",qq,"s")
}
jcrs <- paste0(jcrs,")")
}
}
output = paste0( output, ifelse(lastt, "and ",""),
numberr, " ",  stringr::str_to_lower(pubb), "s",
jcrs,
ifelse( lastt,".",", "))
}
outcomes <- Publications %>%  janitor::tabyl(`Document Type`) %>% data.frame %>% pull(n,`Document.Type`)
outcomes_with_types <- Publications %>% dplyr::mutate(field = ifelse(is.na(JCR),`Document Type`,JCR)) %>% janitor::tabyl(field) %>% data.frame %>% pull(n,field)
only_types <- Publications %>% janitor::tabyl(JCR) %>% data.frame %>% filter(!is.na(JCR)) %>% arrange(JCR) %>% pull(n,JCR)
output = "My research publications include "
types_pub = rev(names(outcomes))
for (i in 1:length(types_pub)) {
pubb <- types_pub[i]
numberr <- outcomes[[pubb]]
lastt <- i==length(types_pub)
jcrs <- ""
if (pubb == "Journal Article") {
if (outcomes_with_types[["Journal Article"]] != outcomes[["Journal Article"]] ){
jcrs <- paste0(jcrs,"(")
for (j in 1:length(names(only_types))){
qq <- only_types[j]
jcrs <- paste0(jcrs, only_types[[qq]], "JCR ",qq,"s")
}
jcrs <- paste0(jcrs,")")
}
}
output = paste0( output, ifelse(lastt, "and ",""),
numberr, " ",  stringr::str_to_lower(pubb), "s",
jcrs,
ifelse( lastt,".",", "))
}
only_types
qq
j
outcomes <- Publications %>%  janitor::tabyl(`Document Type`) %>% data.frame %>% pull(n,`Document.Type`)
outcomes_with_types <- Publications %>% dplyr::mutate(field = ifelse(is.na(JCR),`Document Type`,JCR)) %>% janitor::tabyl(field) %>% data.frame %>% pull(n,field)
only_types <- Publications %>% janitor::tabyl(JCR) %>% data.frame %>% filter(!is.na(JCR)) %>% arrange(JCR) %>% pull(n,JCR)
output = "My research publications include "
types_pub = rev(names(outcomes))
for (i in 1:length(types_pub)) {
pubb <- types_pub[i]
numberr <- outcomes[[pubb]]
lastt <- i==length(types_pub)
jcrs <- ""
if (pubb == "Journal Article") {
if (outcomes_with_types[["Journal Article"]] != outcomes[["Journal Article"]] ){
jcrs <- paste0(jcrs,"(")
for (j in 1:length(names(only_types))){
qq <- names(only_types)[j]
jcrs <- paste0(jcrs, only_types[[qq]], "JCR ",qq,"s")
}
jcrs <- paste0(jcrs,")")
}
}
output = paste0( output, ifelse(lastt, "and ",""),
numberr, " ",  stringr::str_to_lower(pubb), "s",
jcrs,
ifelse( lastt,".",", "))
}
output
outcomes <- Publications %>%  janitor::tabyl(`Document Type`) %>% data.frame %>% pull(n,`Document.Type`)
outcomes_with_types <- Publications %>% dplyr::mutate(field = ifelse(is.na(JCR),`Document Type`,JCR)) %>% janitor::tabyl(field) %>% data.frame %>% pull(n,field)
only_types <- Publications %>% janitor::tabyl(JCR) %>% data.frame %>% filter(!is.na(JCR)) %>% arrange(JCR) %>% pull(n,JCR)
output = "My research publications include "
types_pub = rev(names(outcomes))
for (i in 1:length(types_pub)) {
pubb <- types_pub[i]
numberr <- outcomes[[pubb]]
lastt <- i==length(types_pub)
jcrs <- ""
if (pubb == "Journal Article") {
if (outcomes_with_types[["Journal Article"]] != outcomes[["Journal Article"]] ){
jcrs <- paste0(jcrs,"(")
for (j in 1:length(names(only_types))){
qq <- names(only_types)[j]
jcrs <- paste0(jcrs, only_types[[qq]], "JCR ",qq,"s",ifelse( length(names(only_types)) == j,".",", "))
}
jcrs <- paste0(jcrs,")")
}
}
output = paste0( output, ifelse(lastt, "and ",""),
numberr, " ",  stringr::str_to_lower(pubb), "s",
jcrs,
ifelse( lastt,".",", "))
}
output
outcomes <- Publications %>%  janitor::tabyl(`Document Type`) %>% data.frame %>% pull(n,`Document.Type`)
outcomes_with_types <- Publications %>% dplyr::mutate(field = ifelse(is.na(JCR),`Document Type`,JCR)) %>% janitor::tabyl(field) %>% data.frame %>% pull(n,field)
only_types <- Publications %>% janitor::tabyl(JCR) %>% data.frame %>% filter(!is.na(JCR)) %>% arrange(JCR) %>% pull(n,JCR)
output = "My research publications include "
types_pub = rev(names(outcomes))
for (i in 1:length(types_pub)) {
pubb <- types_pub[i]
numberr <- outcomes[[pubb]]
lastt <- i==length(types_pub)
jcrs <- ""
if (pubb == "Journal Article") {
if (outcomes_with_types[["Journal Article"]] != outcomes[["Journal Article"]] ){
jcrs <- paste0(jcrs,"(")
for (j in 1:length(names(only_types))){
qq <- names(only_types)[j]
jcrs <- paste0(jcrs, only_types[[qq]], " JCR ",qq,"s",ifelse( length(names(only_types)) == j,".",", "))
}
jcrs <- paste0(jcrs,")")
}
}
output = paste0( output, ifelse(lastt, "and ",""),
numberr, " ",  stringr::str_to_lower(pubb), "s",
jcrs,
ifelse( lastt,".",", "))
}
output
outcomes <- Publications %>%  janitor::tabyl(`Document Type`) %>% data.frame %>% pull(n,`Document.Type`)
outcomes_with_types <- Publications %>% dplyr::mutate(field = ifelse(is.na(JCR),`Document Type`,JCR)) %>% janitor::tabyl(field) %>% data.frame %>% pull(n,field)
only_types <- Publications %>% janitor::tabyl(JCR) %>% data.frame %>% filter(!is.na(JCR)) %>% arrange(JCR) %>% pull(n,JCR)
output = "My research publications include "
types_pub = rev(names(outcomes))
for (i in 1:length(types_pub)) {
pubb <- types_pub[i]
numberr <- outcomes[[pubb]]
lastt <- i==length(types_pub)
jcrs <- ""
if (pubb == "Journal Article") {
if (outcomes_with_types[["Journal Article"]] != outcomes[["Journal Article"]] ){
jcrs <- paste0(jcrs,"(")
for (j in 1:length(names(only_types))){
qq <- names(only_types)[j]
jcrs <- paste0(jcrs, only_types[[qq]], " JCR ",qq, ifelse(only_types[[qq]]>1,"s",""),ifelse( length(names(only_types)) == j,"",", "))
}
jcrs <- paste0(jcrs,")")
}
}
output = paste0( output, ifelse(lastt, "and ",""),
numberr, " ",  stringr::str_to_lower(pubb), "s",
jcrs,
ifelse( lastt,".",", "))
}
output
outcomes <- Publications %>%  janitor::tabyl(`Document Type`) %>% data.frame %>% pull(n,`Document.Type`)
outcomes_with_types <- Publications %>% dplyr::mutate(field = ifelse(is.na(JCR),`Document Type`,JCR)) %>% janitor::tabyl(field) %>% data.frame %>% pull(n,field)
only_types <- Publications %>% janitor::tabyl(JCR) %>% data.frame %>% filter(!is.na(JCR)) %>% arrange(JCR) %>% pull(n,JCR)
output = paste0("My", nrow(Publications), " research publications include "
types_pub = rev(names(outcomes))
outcomes <- Publications %>%  janitor::tabyl(`Document Type`) %>% data.frame %>% pull(n,`Document.Type`)
outcomes_with_types <- Publications %>% dplyr::mutate(field = ifelse(is.na(JCR),`Document Type`,JCR)) %>% janitor::tabyl(field) %>% data.frame %>% pull(n,field)
only_types <- Publications %>% janitor::tabyl(JCR) %>% data.frame %>% filter(!is.na(JCR)) %>% arrange(JCR) %>% pull(n,JCR)
output = paste0("My", nrow(Publications), " research publications include ")
types_pub = rev(names(outcomes))
for (i in 1:length(types_pub)) {
pubb <- types_pub[i]
numberr <- outcomes[[pubb]]
lastt <- i==length(types_pub)
jcrs <- ""
if (pubb == "Journal Article") {
if (outcomes_with_types[["Journal Article"]] != outcomes[["Journal Article"]] ){
jcrs <- paste0(jcrs,"(")
for (j in 1:length(names(only_types))){
qq <- names(only_types)[j]
jcrs <- paste0(jcrs, only_types[[qq]], " JCR ",qq, ifelse(only_types[[qq]]>1,"s",""),ifelse( length(names(only_types)) == j,"",", "))
}
jcrs <- paste0(jcrs,")")
}
}
output = paste0( output, ifelse(lastt, "and ",""),
numberr, " ",  stringr::str_to_lower(pubb), "s",
jcrs,
ifelse( lastt,".",", "))
}
output
outcomes <- Publications %>%  janitor::tabyl(`Document Type`) %>% data.frame %>% pull(n,`Document.Type`)
outcomes_with_types <- Publications %>% dplyr::mutate(field = ifelse(is.na(JCR),`Document Type`,JCR)) %>% janitor::tabyl(field) %>% data.frame %>% pull(n,field)
only_types <- Publications %>% janitor::tabyl(JCR) %>% data.frame %>% filter(!is.na(JCR)) %>% arrange(JCR) %>% pull(n,JCR)
output = paste0("My ", nrow(Publications), " research publications include ")
types_pub = rev(names(outcomes))
for (i in 1:length(types_pub)) {
pubb <- types_pub[i]
numberr <- outcomes[[pubb]]
lastt <- i==length(types_pub)
jcrs <- ""
if (pubb == "Journal Article") {
if (outcomes_with_types[["Journal Article"]] != outcomes[["Journal Article"]] ){
jcrs <- paste0(jcrs,"(")
for (j in 1:length(names(only_types))){
qq <- names(only_types)[j]
jcrs <- paste0(jcrs, only_types[[qq]], " JCR ",qq, ifelse(only_types[[qq]]>1,"s",""),ifelse( length(names(only_types)) == j,"",", "))
}
jcrs <- paste0(jcrs,")")
}
}
output = paste0( output, ifelse(lastt, "and ",""),
numberr, " ",  stringr::str_to_lower(pubb), "s",
jcrs,
ifelse( lastt,".",", "))
}
output
outcomes <- Publications %>%  janitor::tabyl(`Document Type`) %>% data.frame %>% pull(n,`Document.Type`)
outcomes_with_types <- Publications %>% dplyr::mutate(field = ifelse(is.na(JCR),`Document Type`,JCR)) %>% janitor::tabyl(field) %>% data.frame %>% pull(n,field)
only_types <- Publications %>% janitor::tabyl(JCR) %>% data.frame %>% filter(!is.na(JCR)) %>% arrange(JCR) %>% pull(n,JCR)
output = paste0("My ", nrow(Publications), " research publications include ")
types_pub = rev(names(outcomes))
for (i in 1:length(types_pub)) {
pubb <- types_pub[i]
numberr <- outcomes[[pubb]]
lastt <- i==length(types_pub)
jcrs <- ""
if (pubb == "Journal Article") {
if (outcomes_with_types[["Journal Article"]] != outcomes[["Journal Article"]] ){
jcrs <- paste0(jcrs," (")
for (j in 1:length(names(only_types))){
qq <- names(only_types)[j]
jcrs <- paste0(jcrs, only_types[[qq]], " JCR ",qq, ifelse(only_types[[qq]]>1,"s",""),ifelse( length(names(only_types)) == j,"",", "))
}
jcrs <- paste0(jcrs,")")
}
}
output = paste0( output, ifelse(lastt, "and ",""),
numberr, " ",  stringr::str_to_lower(pubb), "s",
jcrs,
ifelse( lastt,".",", "))
}
output
outcomes <- Publications %>%  janitor::tabyl(`Document Type`) %>% data.frame %>% pull(n,`Document.Type`)
outcomes_with_types <- Publications %>% dplyr::mutate(field = ifelse(is.na(JCR),`Document Type`,JCR)) %>% janitor::tabyl(field) %>% data.frame %>% pull(n,field)
only_types <- Publications %>% janitor::tabyl(JCR) %>% data.frame %>% filter(!is.na(JCR)) %>% arrange(JCR) %>% pull(n,JCR)
output = paste0("My ", nrow(Publications), " research publications include ")
types_pub = rev(names(outcomes))
for (i in 1:length(types_pub)) {
pubb <- types_pub[i]
numberr <- outcomes[[pubb]]
lastt <- i==length(types_pub)
jcrs <- ""
if (pubb == "Journal Article") {
if (outcomes_with_types[["Journal Article"]] != outcomes[["Journal Article"]] ){
jcrs <- paste0(jcrs," (")
for (j in 1:length(names(only_types))){
qq <- names(only_types)[j]
jcrs <- paste0(jcrs, only_types[[qq]], " JCR ",qq, ifelse(only_types[[qq]]>1,"s",""),ifelse( length(names(only_types)) == j,"",", "))
}
jcrs <- paste0(jcrs,")")
}
}
output = paste0( output, ifelse(lastt, "and ",""),
numberr, " ",  stringr::str_to_lower(pubb),
ifelse(numberr > 1,"s",""),
jcrs,
ifelse( lastt,".",", "))
}
output
htmltools::tags$p(output)
